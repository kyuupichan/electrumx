{{- if .Values.externalSecret.enabled }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "service.fullname" . }}-external
spec:
  # Optional, SecretStoreRef defines the default SecretStore to use when fetching the secret data.
  secretStoreRef:
    name: parameter-store
    kind: ClusterSecretStore
    # RefreshInterval is the amount of time before the values reading again from the SecretStore provider
    # Valid time units are "ns", "us" (or "Âµs"), "ms", "s", "m", "h" (from time.ParseDuration)
    # May be set to zero to fetch and create it once
  refreshInterval: "{{ .Values.externalSecret.refreshInterval }}"
  # the target describes the secret that shall be created
  # there can only be one target per ExternalSecret
  target:
    # The secret name of the resource
    name: {{ include "service.fullname" . }}-secrets
    # Enum with values: 'Owner', 'Merge', or 'None'
    # Default value of 'Owner'
    # Owner creates the secret and sets .metadata.ownerReferences of the resource
    # Merge does not create the secret, but merges in the data fields to the secret
    # None does not create a secret (future use with injector)
    creationPolicy: {{ .Values.externalSecret.creationPolicy }}
    # DeletionPolicy defines how/when to delete the Secret in Kubernetes
    # if the provider secret gets deleted.
    # Valid values are Delete, Merge, Retain
    deletionPolicy: {{ .Values.externalSecret.deletionPolicy }}
  dataFrom:
    - find:
        path: {{ .Values.externalSecret.path }}
        name:
          regexp: {{ include "service.fullname" . }}
      rewrite:
        - regexp:
            source: {{ .Values.externalSecret.source }}
            target: {{ .Values.externalSecret.target }}
{{- end }}